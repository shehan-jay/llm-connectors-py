[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-connectors"
version = "0.1.0"
description = "A library of connectors for popular AI platforms"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
license-files = ["LICENSE"]
authors = [
    {name = "Shehan Jayalath", email = "shehanjayalath@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "openai>=1.0.0",
    "google-generativeai==0.8.5",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/shehan-jay/llm-connectors-py"
Documentation = "https://github.com/shehan-jay/llm-connectors-py#readme"
Repository = "https://github.com/shehan-jay/llm-connectors-py.git"
Issues = "https://github.com/shehan-jay/llm-connectors-py/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "mypy>=1.7.1",
    "black>=23.12.1",
    "isort>=5.13.2",
    "flake8>=7.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"
addopts = "-v --cov=llm_connectors --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"
exclude = [".git", "__pycache__", "build", "dist", "*.egg-info"]
per-file-ignores = ["__init__.py: F401"]

[tool.coverage.run]
source = ["llm_connectors"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
] 